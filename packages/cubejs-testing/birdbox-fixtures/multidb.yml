version: "2.2"

services:
  cube:
    container_name: birdbox-cube
    image: ${BIRDBOX_CUBEJS_REGISTRY_PATH}cubejs/cube:${BIRDBOX_CUBEJS_VERSION:-latest}
    environment:
      CUBEJS_DB_TYPE: postgres

      CUBEJS_DB_HOST: db
      CUBEJS_DB_PORT: 5432
      CUBEJS_DB_NAME: test
      CUBEJS_DB_USER: test
      CUBEJS_DB_PASS: test

      CUBEJS_DB_HOST2: db2
      CUBEJS_DB_PORT2: 3306
      CUBEJS_DB_NAME2: mysql
      CUBEJS_DB_USER2: root
      CUBEJS_DB_PASS2: Test1test

      CUBEJS_DEV_MODE: "true"
      CUBEJS_WEB_SOCKETS: "true"
      CUBEJS_API_SECRET: mysupersecret
    depends_on:
      - db
      - db2
    links:
      - db
      - db2
    volumes:
      - ./postgresql/single/multidb.js:/cube/conf/cube.js
      - ./postgresql/schema/Products.multidb.js:/cube/conf/schema/Products.multidb.js
      - ./postgresql/schema/Suppliers.multidb.js:/cube/conf/schema/Suppliers.multidb.js
    ports:
      - "4000:4000"
    restart: always

  db:
    container_name: birdbox-db
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=test
      - POSTGRES_DB=test
    ports:
      - "5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 10s
      timeout: 5s
      retries: 5

  db2:
    container_name: birdbox-db2
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=Test1test
    ports:
      - "3306:3306"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5